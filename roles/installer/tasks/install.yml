---
- name: Delete old deployment for before installing during upgrade
  kubernetes.core.k8s:
    kind: Deployment
    api_version: apps/v1
    namespace: "{{ ansible_operator_meta.namespace }}"
    name: "{{ ansible_operator_meta.name }}"
    state: absent

- name: Patching labels to AWX kind
  when: set_self_labels | bool
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: "{{ api_version }}"
      kind: "{{ kind }}"
      name: "{{ ansible_operator_meta.name }}"
      namespace: "{{ ansible_operator_meta.namespace }}"
      metadata:
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        labels: '{{ lookup("template", "../common/templates/labels/common.yaml.j2") | from_yaml }}'

- name: Build `additional_labels_items` labels from `additional_labels`
  block:
    - name: Look up details for this deployment
      register: this_awx
      kubernetes.core.k8s_info:
        api_version: "{{ api_version }}"
        kind: "{{ kind }}"
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"

    - name: Select resource labels which are in `additional_labels`
      set_fact:
        additional_labels_items: >-
          {{ this_awx['resources'][0]['metadata']['labels']
             | dict2items | selectattr('key', 'in', additional_labels)
             | list
          }}
      when: this_awx['resources'][0]['metadata']['labels']
  when: additional_labels | length

- name: Include secret key configuration tasks
  ansible.builtin.include_tasks: secret_key_configuration.yml

- name: Load LDAP CAcert certificate
  when:
    - ldap_cacert_secret != ''
  ansible.builtin.include_tasks: load_ldap_cacert_secret.yml

- name: Load ldap bind password
  when:
    - ldap_password_secret != ''
  ansible.builtin.include_tasks: load_ldap_password_secret.yml

- name: Load bundle certificate authority certificate
  when:
    - bundle_cacert_secret != ''
  ansible.builtin.include_tasks: load_bundle_cacert_secret.yml

- name: Include admin password configuration tasks
  ansible.builtin.include_tasks: admin_password_configuration.yml

- name: Include broadcast websocket configuration tasks
  ansible.builtin.include_tasks: broadcast_websocket_configuration.yml

- name: Include set_images tasks
  ansible.builtin.include_tasks: set_images.yml

- name: Include database configuration tasks
  ansible.builtin.include_tasks: database_configuration.yml

- name: Load Route TLS certificate
  when:
    - ingress_type | lower == 'route'
    - route_tls_secret != ''
  ansible.builtin.include_tasks: load_route_tls_secret.yml

- name: Wait for {{ deployment_type }}restore to complete
  kubernetes.core.k8s_info:
    api_version: "{{ api_version }}"
    kind: "{{ deployment_type }}restore"
    namespace: "{{ ansible_operator_meta.namespace }}"
  register: restore_status_check
  until:
  # yamllint disable-line rule:line-length
    - (restore_status_check.resources | length == 0) or (restore_status_check.resources | selectattr('spec.deployment_name', 'equalto', ansible_operator_meta.name)
      | map(attribute='status') | selectattr('restoreComplete', 'defined') | map(attribute='restoreComplete') | list | length > 0)
  delay: 10
  retries: 8640
  ignore_errors: true
  changed_when: false

- name: Include resources configuration tasks
  ansible.builtin.include_tasks: resources_configuration.yml

- name: Migrate database to the latest schema
  when: awx_web_pod_name != ''
  ansible.builtin.include_tasks: migrate_schema.yml

- name: Initialize Django
  when: awx_web_pod_name != ''
  ansible.builtin.include_tasks: initialize_django.yml

- name: Enable optional metrics-utility
  when: metrics_utility_enabled | bool
  ansible.builtin.include_tasks: enable_metrics_utility.yml

- name: Update status variables
  ansible.builtin.include_tasks: update_status.yml

- name: Cleanup & Set garbage collection refs
  ansible.builtin.include_tasks: cleanup.yml
